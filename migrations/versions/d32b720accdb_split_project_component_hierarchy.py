"""Split project component hierarchy.

Revision ID: d32b720accdb
Revises: 4ce9ca3d32ee
Create Date: 2023-05-03 18:19:37.451536

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d32b720accdb"
down_revision = "4ce9ca3d32ee"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "energy_project_component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("power", sa.Float(), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("blackout_threshold", sa.Float(), nullable=True),
        sa.Column("injection_price", sa.Float(), nullable=True),
        sa.Column("efficiency", sa.Float(), nullable=False),
        sa.Column("fuel_cost", sa.Float(), nullable=False),
        sa.Column("overheats", sa.Boolean(), nullable=False),
        sa.Column("overheating_time", sa.Float(), nullable=True),
        sa.Column("cooldown_time", sa.Float(), nullable=True),
        sa.Column("capacity", sa.Float(), nullable=False),
        sa.Column(
            "battery_type",
            postgresql.ENUM(name="batterytype", create_type=False),
            nullable=False,
        ),
        sa.Column("base_soc", sa.Float(), nullable=False),
        sa.Column("min_soc", sa.Float(), nullable=False),
        sa.Column("max_soc", sa.Float(), nullable=False),
        sa.Column("is_critical", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["project_component.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_column("project_component", "injection_price")
    op.drop_column("project_component", "fuel_cost")
    op.drop_column("project_component", "blackout_threshold")
    op.drop_column("project_component", "is_critical")
    op.drop_column("project_component", "efficiency")
    op.drop_column("project_component", "overheats")
    op.drop_column("project_component", "overheating_time")
    op.drop_column("project_component", "max_soc")
    op.drop_column("project_component", "is_primary")
    op.drop_column("project_component", "capacity")
    op.drop_column("project_component", "price")
    op.drop_column("project_component", "power")
    op.drop_column("project_component", "base_soc")
    op.drop_column("project_component", "cooldown_time")
    op.drop_column("project_component", "min_soc")
    op.drop_column("project_component", "battery_type")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "project_component",
        sa.Column(
            "battery_type",
            postgresql.ENUM("LITHIUM_ION", "LEAD_ACID", name="batterytype"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "min_soc",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "cooldown_time",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "base_soc",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "power",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "price",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "capacity",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "is_primary", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "max_soc",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "overheating_time",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "overheats", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "efficiency",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "is_critical", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "blackout_threshold",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "fuel_cost",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "project_component",
        sa.Column(
            "injection_price",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_table("energy_project_component")
    # ### end Alembic commands ###
